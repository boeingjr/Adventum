import urllib2
import re
import os
import sys
import time
from bs4 import BeautifulSoup

QuestIds = []

if len(sys.argv) == 1:
    print "No arguments, exiting"
    exit(0)

def ScanFile(luaName, datName):
    # lua is the name of the file to be scanned, confirmed to exist
    # dat is a file name of a file to (over)write
    print "called ScanFile, filename is valid at this point {} -- {}".format(luaName, datName)
    luaTmp = open(luaName, "r")
    lua = luaTmp.read()
    luaTmp.close()
    qs = re.findall("QLU NEW: \{?(\d+)\}? \[", lua)
    for q in qs:
        QuestIds.append(q)
    dat = open(datName, "w")
    output = " ".join(QuestIds)
    print "Found QuestIds: {}".format(output)
    dat.write(output)
    dat.close()

dat = None
character = re.search("AAs/(\w+)\.(lua|dat)", sys.argv[1])
if character:
    character = character.group(1)
    lua = "AAs/{}.lua".format(character)
    dat = "AAs/{}.dat".format(character)
    if os.path.isfile(lua):
        print "Scanning played quest route for character {}".format(character)
        doScan = False
        if os.path.isfile(dat):
            print "Already has a .dat file"
            if os.path.getmtime(dat) < os.path.getmtime(lua):
                print "Gonna rebuild .dat file"
                doScan = True
            else:
                print "--------------------------------------------------------------"
                print "{} is newer than {},\nand thus likely to be based on same data.\n\nIf you want to rescan, please delete {}".format(dat, lua, dat)
                print "--------------------------------------------------------------"
                doScan = True # TODO: while making this script we want to rescan all the time, change when happy
        else:
            print "No .dat file, lessgo"
            doScan = True
        if doScan:
            ScanFile(lua, dat)
    else:
        print "No played quest route for character {} exists".format(character)
        exit(0)
else:
    print "Cannot find a character name, possibly wrong file type or missing file"
    exit(0)

OldQuestIds = [179, 170, 3107, 3113, 3109, 3108, 3114, 3110, 3112, 3106, 3115, 783, 7, 5261, 33, 18, 3100, 15, 21,
                   3903, 6, 54, 3904, 3905, 2158, 40, 47, 35, 62, 60, 106, 111, 85, 88, 107, 112, 114, 86, 84, 87, 76,
                   109, 61, 1097, 184, 239, 1638, 332, 333, 334, 1639, 1640, 1665, 1666, 37, 52, 83, 5545, 1667, 45,
                   71, 39, 59, 11, 176, 46, 64, 36, 151, 9, 22, 38, 12, 102, 6181, 153, 6281, 6261, 6285, 399, 353,
                   2039, 224, 267, 416, 1339, 436, 418, 1338, 307, 237, 298, 301, 302, 13, 65, 244, 118, 120, 65, 132,
                   3741, 135, 2040, 167, 168, 141, 121, 119, 142, 129, 116, 92, 143, 130, 246, 144, 155, 103, 152, 104,
                   166, 14, 214, 131, 117, 136, 138, 139, 140, 373, 389, 128, 125, 122, 124, 127, 150, 34, 20, 180, 89,
                   1699, 1698, 343, 344, 345, 94, 347, 126, 1699, 1702, 163, 164, 165, 245, 5, 95, 226, 959, 1486,
                   1487, 6981, 3370, 1275, 148, 93, 240, 149, 66, 56, 67, 90, 154, 57, 157, 377, 386, 387, 391, 388,
                   392, 393, 350, 1275, 240, 226, 157, 95, 57, 67, 94, 20, 128, 126, 180, 347, 350, 386, 377, 2745,
                   2746, 68, 69, 455, 469, 305, 473, 484, 279, 463, 470, 294, 306, 299, 276, 277, 275, 295, 158, 70,
                   346, 72, 74, 434, 394, 395, 396, 971, 1199, 1198, 1200, 156, 58, 75, 78, 79, 80, 97, 128, 126, 169,
                   180, 91, 19, 115, 248, 249, 145, 230, 262, 225, 227, 228, 98, 159, 265, 101, 266, 453, 173, 174, 175,
                   177, 268, 133, 323, 181, 281, 471, 288, 472, 464, 289, 296, 465, 284, 285, 286, 290, 292, 474, 293,
                   2923, 1274, 1241, 1718, 1242, 1243, 1244, 221, 337, 269, 134, 160, 1245, 222, 229, 231, 251, 401,
                   252, 253, 1246, 538, 270, 2928, 2922, 2927, 2930, 2929, 2924, 2926, 2962, 4601, 2904, 2945, 2947,
                   412, 2948, 321, 324, 322, 325, 1050, 1447, 1447, 1247, 1248, 55, 223, 1249, 1302, 1250, 1264, 1265,
                   1135, 1719, 1791, 1712, 1218, 1219, 1253, 1284, 1252, 1100, 1220, 1259, 1319, 1285, 1320, 1105, 1104,
                   1110, 1176, 1175, 1178, 1107, 1106, 1111, 5762, 1180, 1112, 1181, 189, 213, 201, 616, 198, 1182, 578,
                   605, 606, 575, 253, 203, 204, 210, 583, 194, 185, 190, 574, 186, 191, 195, 187, 192, 338, 339,
                   627, 600, 622, 601, 577, 196, 188, 341, 340, 342, 1183, 1713, 207, 202, 342, 341, 602, 1114, 1115,
                   1186, 1187, 555, 659, 536, 559, 500, 505, 564, 560, 561, 562, 563, 691, 681, 682, 658, 693, 657,
                   660, 661, 511, 510, 603, 514, 1453, 6141, 1116, 610, 1454, 1458, 1437, 1387, 1382, 261, 1459, 1465,
                   5501, 1438, 5741, 1455, 6161, 1439, 1440, 1456, 1466, 6027, 5561, 1052, 525, 1050, 1053, 1050, 1382,
                   1387, 5501, 1456, 1466, 207, 192, 202, 338, 196, 606, 600, 1107, 1106, 1116, 1187, 1457, 1467, 707,
                   2500, 738, 719, 718, 1108, 705, 703, 710, 720, 721, 733, 711, 739, 709, 2418, 540, 1395, 1396, 1395,
                   1423, 1286, 1204, 1266, 1206, 1287, 2846, 1324, 1203, 1258, 17, 704, 2769, 2398, 1360, 712, 1137, 6624,
                   1177, 713, 714, 734, 777, 778, 778, 1448, 1363, 1364, 1421, 1389, 1393, 1423, 1392, 1398, 1425, 610,
                   209, 2864, 1117, 621, 606, 617, 595, 193, 340, 597, 607, 599, 609, 623, 587, 604, 576, 2872, 1449,
                   1707, 1690, 3022, 6610, 8365, 2781, 2875, 3520, 8366, 2873, 1118, 1188, 1190, 2398, 1360, 17, 704,
                   721, 2418, 709, 2198, 2240, 2278, 2279, 2501, 727, 2199, 2200, 2439, 722, 723, 724, 725, 726, 762, 706,
                   732, 717, 2963, 1139, 1119, 6610, 2770, 1190, 1190, 1194, 1120, 1122, 2766, 2969, 2969, 2970, 2972,
                   2821, 4124, 2866, 2982, 2939, 4125, 2867, 3130, 2869, 2870, 2871, 4127, 4129, 4130, 4131, 2767, 4135,
                   4281, 4265, 7733, 4265, 4266, 4267, 3661, 2940, 2941, 2944, 1691, 2876, 3527, 2874, 580, 2946, 2880,
                   2877, 1450, 1451, 2988, 1452, 2989, 2990, 2991, 2943, 2865, 3042, 351, 2768, 4787, 2879, 3445, 7003,
                   7721, 7735, 2844, 2942, 2845, 3841, 992, 2605, 7070, 7065, 7041, 7028, 7067, 7044, 7066, 5863, 648,
                   3362, 82, 3444, 3161, 7046, 2954, 2977, 2606, 2641, 10, 110, 113, 162, 3842, 3843, 4297, 1469, 1446,
                   4298, 2964, 3448, 1475, 2992, 2993, 2661, 2662, 4502, 3446, 3447, 2994, 3528, 4324, 2882, 594, 4324,
                   3448, 7066, 594, 1475, 3446, 3447, 1446, 3528, 162, 4502, 630, 2601, 2603, 2581, 2583, 2585, 1139,
                   2200, 2201, 2204, 3441, 3442, 7729, 7728, 7701, 7727, 7723, 7724, 7722, 4451, 4449, 3367, 3368, 3371,
                   4450, 3372, 3377, 3378, 3443, 3452, 3453, 3454, 3462, 3463, 3481, 3789, 2783, 2801, 2581, 2583, 2585,
                   2601, 2603, 4128, 3501, 3373, 8149, 4512, 3449, 3450, 3451, 4493, 5535, 5536, 3601, 5534, 3461, 5155,
                   4421, 5156, 8460, 4101, 8462, 5157, 5158, 5159, 5165, 4906, 939, 5082, 4504, 4496, 4290, 4289, 3844,
                   3845, 4291, 3884, 4292, 4243, 3908, 4284, 3881, 4492, 4141, 4491, 4513, 4285, 4287, 4288, 3882, 3883,
                   4503, 974, 980, 4501, 4321, 3909, 6603, 4142, 4143, 4286, 4182, 4262, 3823, 4726, 4136, 4022, 4024,
                   3824, 4183, 4808, 3825, 4184, 4185, 4186, 4223, 4224, 4241, 4126, 4441, 5249, 5202, 5203, 5242, 5204,
                   3912, 978, 3913, 3914, 3941, 3942, 4301, 4244, 4245, 4084, 4442, 4136, 4241, 4126, 4286, 4024, 4262,
                   4808, 5249, 5204, 5242, 978, 4143, 4084, 4842, 5082, 5083, 5244, 5245, 4861, 4809, 3783, 6030, 6028,
                   5601, 5084, 5085, 4261, 5385, 4005, 3783, 5086, 5087, 4810, 977, 5163, 5121, 979, 3961, 3702, 3701,
                   4123, 4296, 4341, 4126, 3801, 3802, 7848, 4242, 4342, 4361, 4263, 4264, 4282, 4201, 4322, 4362, 4136,
                   4201, 4123, 4263, 4286, 4024, 4322, 4362, 5601, 7848, 979, 6030, 6028, 5245, 4861, 5121, 6402, 6403,
                   6501, 4201, 4123, 4024, 4362, 5601, 7848, 979, 6501, 6030, 6028, 5245, 4861, 5121, 5246, 5090, 1019,
                   6182, 6183, 6184, 6185, 5092, 5215, 5097, 5216, 4971, 5217, 5021, 5022, 4972, 5533, 5537, 5219, 5220,
                   5048, 5050, 5051, 5538, 5801, 6804, 6805, 4907, 6502, 4863, 4864, 4901, 4902, 3764, 6761, 3781, 3785,
                   5803, 211, 5222, 4984, 5223, 6004, 5542, 5543, 5544, 6023, 6025, 5225, 5226, 4985, 5247, 6186, 6187,
                   4986, 5742, 5781, 5149, 5241, 5152, 5211, 6762, 1124, 1125, 1126, 6844, 6845, 5527, 6821, 3374, 3512,
                   5248, 5526, 5252, 5903, 5153, 5154, 5210, 5253, 6021, 5281, 5181, 5168, 6024, 5845, 6164, 5904, 5846,
                   5848, 6389, 4283, 4764, 4701, 4866, 4734, 4729, 4862, 1189, 4507, 5065, 3962, 6822, 4508, 4788, 4510,
                   5206, 5941, 5721, 179, 3110, 233, 170, 3361, 234, 183, 182, 3364, 3365, 5626, 420, 2160, 5625, 384,
                   400, 317, 313, 5541, 456, 3117, 457, 458, 4495, 459, 916, 3519, 917, 3521, 3522, 920, 921, 928, 2159,
                   488, 489, 997, 475, 929, 4161, 2438, 932, 918, 919, 922, 487, 933, 476, 483, 2459, 923, 7383, 6063,
                   6101, 6102, 6103, 2498, 487, 2498, 483, 7383, 2541, 2561, 486, 2499, 930, 937, 931, 940, 952, 935,
                   6341, 6342, 224, 267, 416, 1339, 418, 1338, 307, 224, 267, 1338, 224, 267, 1338, 237, 6661, 6662,
                   399, 176, 64, 109, 36, 151, 9, 22, 38, 12, 65, 102, 153, 13, 14, 244, 246, 118, 120, 129, 116, 132,
                   3741, 1097, 130, 131, 92, 135, 141, 121, 119, 142, 155, 117, 103, 152, 104, 166, 214, 143, 56, 101,
                   163, 165, 164, 245, 5, 226, 144, 125, 20, 122, 124, 145, 127, 89, 127, 20, 150, 95, 148, 146, 93, 174,
                   468, 455, 469, 455, 484, 279, 463, 470, 276, 277, 126, 20, 128, 467, 256, 436, 255, 263, 217, 297,
                   298, 301, 302, 2039, 273, 454, 309, 257, 385, 258, 2038, 271, 91, 169, 180, 219, 219, 19, 115, 947,
                   729, 948, 4740, 944, 731, 949, 950, 5321, 1056, 991, 1008, 1070, 1033, 1054, 741, 1007, 1009, 1023,
                   1024, 1134, 942, 281, 471, 288, 943, 470, 305, 294, 306, 275, 175, 240, 149, 66, 67, 177, 154, 57,
                   157, 181, 173, 68, 230, 158, 262, 265, 156, 266, 69, 453, 159, 268, 133, 323, 134, 70, 72, 74, 94, 75,
                   75, 78, 337, 79, 58, 80, 97, 34, 248, 178, 249, 538, 1078, 3765, 281, 471, 289, 472, 473, 464, 4264
]

StartEndIds = [
    "npc233", "npc237","npc240","npc261", "npc963", "npc234", "object20805", "npc4048", "npc4630"
]

titlePattern = "[A-Z0-9][-a-zA-Z0-9'?!:.,+= ]*"

QuestDB = {}

def fetchQuests(questId):
    fname = "QuestDB/{}.html".format(questId)
    url = "https://classic.wowhead.com/quest={}".format(questId)
    if not os.path.isfile(fname):
        print "Fetching from WowHead for QuestId {} on url: {}".format(questId, url)
        c=urllib2.urlopen(url).read()
        f=open(fname, "w+")
        f.write(c)
        f.close()
        return 1
    else:
        print "Already have file for QuestId {} on url: {}".format(questId, url)
        return 0
#end fetchQuests

def fetchStartEnds(id):
    fname = "StartEndDB/{}.html".format(id)
    m = re.search("([a-z]+)(\d+)", id)
    _type = m.group(1)
    _id = m.group(2)
    url = "https://classic.wowhead.com/{}={}".format(_type, _id)
    if not os.path.isfile(fname):
        print "Fetching from WowHead for {} on url: {}".format(id, url)
        c=urllib2.urlopen(url).read()
        f=open(fname, "w+")
        f.write(c)
        f.close()
        return 1
    else:
        print "Already have file for {} on url: {}".format(id, url)
        return 0
#end fetchQuests

sleepCounter = 0

print "starting to look at quest ids"
for questId in QuestIds:
    if sleepCounter == 5:
        print "taking a short break"
        time.sleep(25)
        sleepCounter = 0
    sleepCounter = sleepCounter + fetchQuests(questId)

sleepCounter = 0

print "starting to look at start end ids"
for startEndId in StartEndIds:
    if sleepCounter == 5:
        print "taking a short break"
        time.sleep(25)
        sleepCounter = 0
    sleepCounter = sleepCounter + fetchStartEnds(startEndId)
